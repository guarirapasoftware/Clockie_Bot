# scheduler.py
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from config import TIMEZONE
import logging
from datetime import datetime

logger = logging.getLogger(__name__)


class Scheduler:
    def __init__(self):
        self.scheduler = AsyncIOScheduler(timezone=TIMEZONE)
        self.bot = None
        self.storage = None

    def setup(self, bot, storage):
        self.bot = bot
        self.storage = storage

    def add_reminder(self, task_id, run_date):
        logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {task_id} –Ω–∞ {run_date}")
        if self.scheduler.get_job(task_id):
            self.scheduler.remove_job(task_id)

        self.scheduler.add_job(
            self.send_reminder,
            "date",
            run_date=run_date,
            args=[task_id],
            id=task_id
        )

    async def send_reminder(self, task_id: str):
        logger.info(f"üîî –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {task_id}")
        task = self.storage.get_task(task_id)

        if not task:
            logger.warning(f"–ó–∞–¥–∞—á–∞ {task_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        if not self.bot:
            logger.error("–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return

        try:
            await self.bot.send_message(
                chat_id=task["chat_id"],
                text=f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!\n{task['description']}"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        finally:
            self.storage.remove_task(task_id)


    def start(self):
        try:
            self.scheduler.start()
            logger.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")

    def shutdown(self):
        self.scheduler.shutdown()
        logger.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")